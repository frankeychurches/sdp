// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "10/14/2021 12:14:31"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module n_counter (
	clk,
	reset,
	enable,
	up_down,
	count,
	TC);
input 	clk;
input 	reset;
input 	enable;
input 	up_down;
output 	[1:0] count;
output 	TC;

// Design Ports Information
// count[0]	=>  Location: PIN_U3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[1]	=>  Location: PIN_R7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// TC	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// up_down	=>  Location: PIN_R6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_R3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// enable	=>  Location: PIN_U4,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \count[0]~output_o ;
wire \count[1]~output_o ;
wire \TC~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \reset~input_o ;
wire \count~0_combout ;
wire \enable~input_o ;
wire \count[0]~reg0_q ;
wire \up_down~input_o ;
wire \count~1_combout ;
wire \count[1]~reg0_q ;
wire \TC~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y34_N9
cycloneive_io_obuf \count[0]~output (
	.i(\count[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[0]~output .bus_hold = "false";
defparam \count[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y35_N16
cycloneive_io_obuf \count[1]~output (
	.i(\count[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[1]~output .bus_hold = "false";
defparam \count[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y35_N9
cycloneive_io_obuf \TC~output (
	.i(!\TC~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\TC~output_o ),
	.obar());
// synopsys translate_off
defparam \TC~output .bus_hold = "false";
defparam \TC~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y34_N22
cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N16
cycloneive_lcell_comb \count~0 (
// Equation(s):
// \count~0_combout  = (!\count[0]~reg0_q  & \reset~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\count[0]~reg0_q ),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\count~0_combout ),
	.cout());
// synopsys translate_off
defparam \count~0 .lut_mask = 16'h0F00;
defparam \count~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y34_N15
cycloneive_io_ibuf \enable~input (
	.i(enable),
	.ibar(gnd),
	.o(\enable~input_o ));
// synopsys translate_off
defparam \enable~input .bus_hold = "false";
defparam \enable~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X1_Y34_N17
dffeas \count[0]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[0]~reg0 .is_wysiwyg = "true";
defparam \count[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y34_N1
cycloneive_io_ibuf \up_down~input (
	.i(up_down),
	.ibar(gnd),
	.o(\up_down~input_o ));
// synopsys translate_off
defparam \up_down~input .bus_hold = "false";
defparam \up_down~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N2
cycloneive_lcell_comb \count~1 (
// Equation(s):
// \count~1_combout  = (\reset~input_o  & (\up_down~input_o  $ (\count[1]~reg0_q  $ (!\count[0]~reg0_q ))))

	.dataa(\reset~input_o ),
	.datab(\up_down~input_o ),
	.datac(\count[1]~reg0_q ),
	.datad(\count[0]~reg0_q ),
	.cin(gnd),
	.combout(\count~1_combout ),
	.cout());
// synopsys translate_off
defparam \count~1 .lut_mask = 16'h2882;
defparam \count~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y34_N3
dffeas \count[1]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[1]~reg0 .is_wysiwyg = "true";
defparam \count[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N0
cycloneive_lcell_comb \TC~0 (
// Equation(s):
// \TC~0_combout  = (\count[0]~reg0_q ) # (\up_down~input_o  $ (\count[1]~reg0_q ))

	.dataa(gnd),
	.datab(\up_down~input_o ),
	.datac(\count[0]~reg0_q ),
	.datad(\count[1]~reg0_q ),
	.cin(gnd),
	.combout(\TC~0_combout ),
	.cout());
// synopsys translate_off
defparam \TC~0 .lut_mask = 16'hF3FC;
defparam \TC~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign count[0] = \count[0]~output_o ;

assign count[1] = \count[1]~output_o ;

assign TC = \TC~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
