// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 17.1 (Build Build 590 10/25/2017)
// Created on Wed Dec 15 21:25:17 2021

adc_fsm adc_fsm_inst
(
	.CLK(CLK_sig) ,	// input  CLK_sig
	.RST_n(RST_n_sig) ,	// input  RST_n_sig
	.Enable1(Enable1_sig) ,	// input  Enable1_sig
	.Enable2(Enable2_sig) ,	// input  Enable2_sig
	.wait_irq(wait_irq_sig) ,	// input  wait_irq_sig
	.ADC_CS(ADC_CS_sig) ,	// output  ADC_CS_sig
	.ADC_PENIRQ_n(ADC_PENIRQ_n_sig) ,	// input  ADC_PENIRQ_n_sig
	.wait_en(wait_en_sig) ,	// output  wait_en_sig
	.Ena_trans(Ena_trans_sig) ,	// output  Ena_trans_sig
	.Fin_trans(Fin_trans_sig) 	// output  Fin_trans_sig
);

defparam adc_fsm_inst.S0 = 0;
defparam adc_fsm_inst.S1 = 1;
defparam adc_fsm_inst.S2 = 2;
defparam adc_fsm_inst.S3 = 3;
defparam adc_fsm_inst.S4 = 4;
